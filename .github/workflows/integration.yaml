name: Integration
on: [push, pull_request]
env:
  GALAXY_TEST_DBURI: 'postgres://postgres:postgres@localhost:5432/galaxy?client_encoding=utf8'
  GALAXY_TEST_AMQP_URL: 'amqp://localhost:5672//'
jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7]
        subset: ['upload_datatype', 'extended_metadata', 'kubernetes', 'not (upload_datatype or extended_metadata or kubernetes)']
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672
    steps:
    - name: Prune unused docker image, volumes and containers
      run: docker system prune -a -f
    - name: Clean dotnet folder for space
      if: matrix.subset == 'kubernetes'
      run: rm -Rf /usr/share/dotnet
    - name: Setup Minikube
      if: matrix.subset == 'kubernetes'
      id: minikube
      uses: CodingNagger/minikube-setup-action@v1.0.3
      with:
        minikube-version: "1.9.0-0_amd64"
    - name: Launch Minikube
      if: matrix.subset == 'kubernetes'
      run: eval ${{ steps.minikube.outputs.launcher }}
    - name: Check pods
      if: matrix.subset == 'kubernetes'
      run: |
        kubectl get pods
    - uses: actions/checkout@v2
      with:
        path: 'galaxy root'
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip dir
      uses: actions/cache@v1
      id: pip-cache
      with:
        path: ~/.cache/pip
        key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('galaxy root/requirements.txt') }}
    - name: Run tests
      run: './run_tests.sh -integration test/integration -- -k "${{ matrix.subset }}"'
      working-directory: 'galaxy root'
